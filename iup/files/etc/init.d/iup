#!/bin/sh /etc/rc.common
# iup at boot
# Copyright (C) 2007 OpenWrt.org

START=98
STOP=15
USE_PROCD=1

. /lib/functions.sh

include /lib/network

CRONPATH="/etc/crontabs/root"
RANGE=60

management_interfaces() {
	local DHCP_IFACES=""

	is_notbridged_dhcp() {
		local config="$1"
		local proto="$(uci -q get network.$config.proto)"
		local typ="$(uci -q get network.$config.type)"
		if [ "$proto" == "dhcp" -a "$typ" != "bridge" ]; then
			DHCP_IFACES="$DHCP_IFACES $config"
		fi
	}

	config_load network
	config_foreach is_notbridged_dhcp interface
	echo $DHCP_IFACES
}

init_iup() {
	local interval
	local starttime
	local nummber
	number=$RANDOM

	if [ -f $CRONPATH ]; then
		echo "File $CRONPATH exists"
	else
		echo  "File $CRONPATH did not exists"
		touch $CRONPATH
	fi

	config_load provisioning
	config_get interval  polling  interval
	config_get starttime  polling  starttime

	### Ask for IUP related DHCP options only if IUP is enabled ###
	new_reqopts() {
		local net=$1
		local enabled
		local newreqopts=
		local baseopts=
		local reqopts="$(uci -q get network.$net.reqopts)"
		local iupopts="66 67 128 224"
		local ropt iopt
		config_get enabled iup enabled "on"
		for ropt in $reqopts; do
			case $ropt in
				66|67|128|224) ;;
				*) baseopts="$baseopts $ropt" ;;
			esac
		done
		ropt=""
		reqopts="$baseopts $iupopts"
		for ropt in $reqopts; do
			case $ropt in
				66|67|128|224) [ $enabled == "on" ] && newreqopts="$newreqopts $ropt" ;;
				*) newreqopts="$newreqopts $ropt" ;;
			esac
		done

		newreqopts="$(echo $newreqopts | tr ' ' '\n' | sort -n | tr '\n' ' ' | sed 's/^[ \t]*//;s/[ \t]*$//')"
		echo "$newreqopts"
	}
	for net in $(management_interfaces); do
		uci -q set network.$net.reqopts="$(new_reqopts $net)"
	done
	uci commit network
	ubus call network reload
	#################################################################

	if [ $interval == "weekly" ]; then
		interval="0"
	elif [ $interval == "hourly" ]; then
		interval='*'
		starttime='*'
	else
		interval='*'
	fi
        let "number %= $RANGE"
	if grep -q "$starttime  \* \* \\$interval     /sbin/iup" "$CRONPATH" ; then
		echo "IUP is scheduled $starttime  \* \* \\$interval "
	else 
		if grep -q "iup" "$CRONPATH" ; then
			sed -i "/iup/d" $CRONPATH
		fi
		echo "$number $starttime * * $interval     /sbin/iup -v > /dev/null 2>&1" >> $CRONPATH
		fsync $CRONPATH
		/etc/init.d/cron restart
	fi
}

start_service() {
	init_iup

	/sbin/iup -v -v &
}

stop_service() {
	if [ -f "/tmp/run/iup.pid" ]; then
		kill -9 $(cat /tmp/run/iup.pid)
		rm -rf /tmp/run/iup.pid
	fi
}

reload_service() {
	stop
	start
}

service_triggers() {
        procd_add_reload_trigger provisioning
}
