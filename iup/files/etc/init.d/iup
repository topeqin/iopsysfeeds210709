#!/bin/sh /etc/rc.common
# iup at boot
# Copyright (C) 2007 OpenWrt.org

START=98
STOP=15
USE_PROCD=1

. /lib/functions.sh

include /lib/network

CRONPATH="/etc/crontabs/root"
RANGE=60

init_iup() {
	local interval
	local starttime
	local nummber
	number=$RANDOM

	if [ -f $CRONPATH ]; then
		echo "File $CRONPATH exists"
	else
		echo  "File $CRONPATH did not exists"
		touch $CRONPATH
	fi

	config_load provisioning
	config_get interval  polling  interval
	config_get starttime  polling  starttime

	### Ask for IUP related DHCP options only if IUP is enabled ###
	local enabled
	local newreqopts=
	local baseopts=
	local reqopts="$(uci -q get network.wan.reqopts)"
	local proto="$(uci -q get network.wan.proto)"
	local iupopts="66 67 128"
	local ropt iopt
	config_get enabled iup enabled "off"
	for ropt in $reqopts; do
		case $ropt in
			66|67|128) ;;
			*) baseopts="$baseopts $ropt" ;;
		esac
	done
	ropt=""
	reqopts="$baseopts $iupopts"
	for ropt in $reqopts; do
		case $ropt in
			66|67|128) [ $enabled == "on" ] && newreqopts="$newreqopts $ropt" ;;
			*) newreqopts="$newreqopts $ropt" ;;
		esac
	done
	if [ "$proto" == "dhcp" ]; then
		newreqopts="$(echo $newreqopts | tr ' ' '\n' | sort -n | tr '\n' ' ' | sed 's/^[ \t]*//;s/[ \t]*$//')"
		uci -q set network.wan.reqopts="$newreqopts"
		uci commit network
		ubus call network reload
	fi
	#################################################################

	if [ $interval == "weekly" ]; then
		interval="0"
	elif [ $interval == "hourly" ]; then
		interval='*'
		starttime='*'
	else
		interval='*'
	fi
        let "number %= $RANGE"
	if grep -q "$starttime  \* \* \\$interval     /sbin/iup" "$CRONPATH" ; then
		echo "IUP is scheduled $starttime  \* \* \\$interval "
	else 
		if grep -q "iup" "$CRONPATH" ; then
			sed -i "/iup/d" $CRONPATH
		fi
		echo "$number $starttime * * $interval     /sbin/iup > /dev/null 2>&1" >> $CRONPATH
		fsync $CRONPATH
		/etc/init.d/cron restart
	fi
}

boot() {
	init_iup
}

start_service() {
	init_iup

	test_default_route
	if [ "$?" -eq 0 ]; then
		/sbin/iup &
	fi
}

stop_service() {
	if [ -f "/tmp/run/iup.pid" ]; then
		kill -9 $(cat /tmp/run/iup.pid)
		rm -rf /tmp/run/iup.pid
	fi
}

reload_service() {
	stop
	start
}

service_triggers() {
        procd_add_reload_trigger provisioning
}
