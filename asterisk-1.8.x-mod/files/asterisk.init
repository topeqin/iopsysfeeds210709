#!/bin/sh /etc/rc.common

START=98
STOP=10

. /usr/share/libubox/jshn.sh
USE_PROCD=1
NAME=asterisk
PROG=/usr/sbin/asterisk
DEFAULT=/etc/default/asterisk

get_ip(){
	local ifname="$1"
	local ifstatus="$(ifstatus "$ifname")"
	local address
	json_load "$ifstatus" || return
	if json_select "ipv4-address"; then
		if json_select 1; then
			json_get_var address "address"
			if [ "$address" != "" ]; then
				echo "$address"
				json_cleanup
				return
			fi
			json_select ..
		fi
		json_select ..
	fi
	if json_select "ipv6-address"; then
		if json_select 1; then
			json_get_var address "address"
			json_select ..
		fi
		json_select ..
	fi
	echo "$address"
	json_cleanup
}

init_asterisk() {
	# do not start asterisk until the
	# router receives a default route
	config_load asterisk
	local bindintf
	config_get bindintf SIP bindintf
	if [ "$bindintf" == ""  ]; then
		while ! ip r | grep -q default; do
			sleep 1
		done
	else
		while [ "$(get_ip "$bindintf")" == "" ]; do
			sleep 1
		done
	fi

	[ -f $DEFAULT ] && . $DEFAULT
	[ -d /var/run/asterisk ] || mkdir -p /var/run/asterisk
	[ -d /var/log/asterisk ] || mkdir -p /var/log/asterisk
        [ -d /var/spool/asterisk ] || mkdir -p /var/spool/asterisk

        # does the board have a fxs relay?
        local fxsRelayGpio=$(db -q get hw.board.fxsRelayGpio)
        if [ "$fxsRelayGpio" != "" ]; then
                /sbin/brcm_fw_tool set -x $fxsRelayGpio -p 1
        fi
}

service_triggers() {
        procd_add_reload_trigger voice_client
}

start_service() {
	init_asterisk

	procd_open_instance
	procd_set_param command "$PROG" -f
	procd_set_param respawn
	procd_close_instance
#	service_start /usr/sbin/asterisk
}

reload_service() {
	asterisk -rx "core reload"
	asterisk -rx "dialplan reload"
	asterisk -rx "brcm reload"
}

restart() {
	reload
}

stop_service() {
        service_stop /usr/sbin/asterisk
}

