# test config for peripheral_manager
# only contain options that peripheral_manager needs and that can be used
# when compiling to host (not target hardware)

config board 'board'
	option hardware 'CG300'

#	for CATV parsing we need this hardware
#	option hardware 'EG300'	

###############################################################################
#
# example for low level button.
#
#

config sim_button sim_buttons
       list buttons sim_button_A
       list buttons sim_button_B
       list buttons sim_button_c
       list buttons sim_button_d
       list buttons sim_button_e

config sim_button sim_button_A
       option addr 10
       option active hi

config sim_button sim_button_B
       option addr 11
       option active low

config sim_button sim_button_c
       option addr 12
       option active hi

config sim_button sim_button_d
       option addr 13
       option active hi

config sim_button sim_button_e
       option addr 14
       option active hi

###############################################################################
#
# example for mapping system button to driver button.
# 
# mapping serveral "functions" buttons to one physical can be done with the long press option
# if 
#
# this is a list of all button names. perifmanger will read this list then read out the specific button config

config button_map button_map
	list buttonnames RESET
	list buttonnames Wireless
	list buttonnames WPS
	list buttonnames DECT
	list buttonnames TOUCH_NEAR
	list buttonnames TOUCH_FAR
	option minpress 100	# default minimum time a button nedes to be pressed. 

config button_map RESET
#       list button gpio_reset
       list button sim_button_A # driver that is used for this button
       option minpress 5000	# don't allow button unless pressed for 5 seconds.
       option hotplug resetbutton

config button_map Wireless
       list button sim_button_B # driver that is used for this button
       list button sim_button_c # we support user having to press two at the same time to register a button event.
       option minpress 1000
       option hotplug ecobutton

# long press example one or the other of touch_near or touch_far will trigger not booth.

config button_map TOUCH_NEAR
       list button gpio_reset
#       list button sim_button_d # driver that is used for this button
       option hotplug touch_near

config button_map TOUCH_FAR
       list button sim_button_d # driver that is used for this button
       option longpress	3000    # this button has a long press option. 
       option hotplug touch_far



###############################################################################
#
# example for low level led driver.
# here we list what the led can do and any info the driver needs to know to controll the led.
#
# would proably be smarter to name the leds as the color and not just A B C.
# but this is an example to show there is no connection with the name and what it
# does. 
#
config sim_led sim_leds
        list leds sim_led_A
	list leds sim_led_B
	list leds sim_led_C

config sim_led sim_led_A
       option addr     1
       option color    green
       option breading no

config sim_led sim_led_B
       option addr	7
       option color	red
       option breading	no

config sim_led sim_led_C
       option addr	3
       option color	blue
       option breading	yes
       option fadein    yes
       option fadeout   yes

###############################################################################
#
#   gpio leds
#
config gpio_led gpio_leds
        list leds Status_green
	list leds Status_red
	list leds Wireless_green
	list leds Wireless_blue
	list leds WAN_green
	list leds WAN_yellow

config gpio_led Status_green
       option addr     39
       option active   low
       option mode     direct

config gpio_led Status_red
       option addr     38
       option active   low
       option mode     direct

config gpio_led Wireless_green
       option addr     37
       option active   low
       option mode     direct

config gpio_led Wireless_blue
       option addr     36
       option active   low
       option mode     direct

config gpio_led WAN_green
       option addr     9
       option active   low
       option mode     direct

config gpio_led WAN_yellow
       option addr     10
       option active   low
       option mode     direct

###############################################################################
#
#   gpio buttons
#

config gpio_button gpio_buttons
       list buttons gpio_reset

config gpio_button gpio_reset
       option addr 32
       option active low
#       option feedback


###############################################################################
#
# example mapping sim leds to system leds. 
#
# the led_action list can be from one entry and up.
# 
# led_action, list of leds to set. 
# button_action. list of button events to send out 
# effect_action, list of special effects to activate. (dim display.....)
# 

config led_map led_map
       list functions status
       list functions wifi
       list functions wps

config led_map led_status
       list led_action_ok       'sim_led_A = ON'    
       list led_action_ok       'sim_led_B = OFF'
       list led_action_off      'sim_led_A = OFF'
       list led_action_off      'sim_led_B = OFF'
       list led_action_notice   'sim_led_A = FLASH_SLOW'
       list led_action_notice   'sim_led_B = OFF'
       list led_action_alert    'sim_led_A = OFF'
       list led_action_alert    'sim_led_B = FLASH_SLOW'
       list led_action_error    'sim_led_A = OFF'
       list led_action_error    'sim_led_B = FLASH_FAST'

config led_map led_wps
#       list led_action_ok       'WPS_green=ON'
#       list led_action_off      'WPS_green=OFF'
#       list led_action_notice   'WPS_green=FLASH_SLOW'
#       list led_action_alert    'WPS_green=FLASH_FAST'
#       list led_action_error    'WPS_green=OFF'  

config led_map led_wifi
#       list led_action_ok     'Wireless_green = ON'
#       list led_action_ok     'Wireless_blue  = OFF'
#       list led_action_eok    'Wireless_green = OFF'
#       list led_action_eok    'Wireless_blue  = ON'
#       list led_action_off    'Wireless_green = OFF'
#       list led_action_off    'Wireless_blue  = OFF'
#       list led_action_notice 'Wireless_green = FLASH_SLOW'
#       list led_action_notice 'Wireless_blue  = OFF'
#       list led_action_alert  'Wireless_green = OFF'
#       list led_action_alert  'Wireless_blue  = FLASH_SLOW'
#       list led_action_error  'Wireless_green = OFF'
#       list led_action_error  'Wireless_blue  = FLASH_FAST'

###############################################################################
#
# function superfunctions
# 
# Used when one led is controlled by seferal different functions
# here we map in what state the underlying normal functions should have
# to set a state, and what action to take in that state.


# list available super functions.
config led_map led_map
       list functions super_a

config led_map led_super_a
       list led_action_ok	sim_led_C=ON
       list super_ok		'wifi_ok, wps_ok'

       list led_action_off      sim_led_C=OFF
       list super_off		'wifi_off, wps_off'

       list led_action_notice	 sim_led_C=FLASH_SLOW
       list super_notice	 'wifi_notice'
       list super_notice  	 'wps_notice'
