#!/bin/sh

. /usr/share/libubox/jshn.sh
. /lib/functions.sh

local state="exit"

set_wireless_values() {
	local iface_num="$1"
	local ssid="$2"
	local key="$3"
	local encryption="$4"
	local old_ssid old_key old_encryption
	if ! uci -q get wireless.@wifi-iface[$iface_num] >/dev/null 2>&1; then
		state="reload"
		uci add wireless wifi-iface >/dev/null 2>&1
	fi
	local network="$(uci -q get wireless.@wifi-iface[$iface_num].network)"
	old_ssid="$(uci -q get wireless.@wifi-iface[$iface_num].ssid)"
	old_key="$(uci -q get wireless.@wifi-iface[$iface_num].key)"
	old_encryption="$(uci -q get wireless.@wifi-iface[$iface_num].encryption)"
	if [ "$old_ssid" != "$ssid" -o "$old_encryption" != "$encryption" -o "$old_key" != "$key" -o -z "$network" ]; then
		#TODO: get network dynamicaly
		[ "$state" == "exit" ] && state="apply"
		[ -z "$network" ] && network="wan"
		uci set wireless.@wifi-iface[$iface_num].network="$network"
		uci set wireless.@wifi-iface[$iface_num].ssid="$ssid"
		uci set wireless.@wifi-iface[$iface_num].key="$key"
		uci set wireless.@wifi-iface[$iface_num].encryption="$encryption"
	fi
}

get_wifi_device_from_band(){
	local section="$1"
	local band="$2"
	local __ret="$3"
	local b
	config_get b $section "band"
	if [ "$band" == "$b" ]; then
		eval "export -- \"$__ret=$section\""
	fi
}

get_device(){
	local band="$1"
	config_foreach get_wifi_device_from_band "wifi-device" "$band" "$2"
}

get_iface_num() {
	local device="$1"
	local prev="$2"
	local __save="$3"
	local i=0
	local dev
	while true; do
		[ $i -gt 100 ] && break ## just a safty messure
		dev="$(uci -q get wireless.@wifi-iface[$i].device)"
		if [ "$dev" != "$device" ]; then
			[ -z "$dev" ] && break
			i=$((i+1))
		elif [ $prev -ne 0 ]; then
			i=$((i+1))
			prev=$((prev-1))
		else
			break
		fi
	done
	eval "export -- \"$__save=$i\""
}

get_default_repeater_mode() {
	local board="$(db -q get hw.board.hardware)"
	local mode="repeater"
	case "$board" in
		EX400) mode="repeater_mtk_5g_up_dual_down" ;;
		*) mode="repeater_brcm_2g_up_5g_down" ;;
	esac
	echo "$mode"
}

###### START HERE #######

local file="$1"
[ -f "$file" ] || exit

json_load "`cat $file`"
json_select "wifi_ifaces"

local curmode repmode
config_load netmode
config_get curmode setup curmode

case $curmode in
	*repeater*)
	;;
	*)
		repmode=$(get_default_repeater_mode)
		uci set netmode.setup.curmode="$repmode"
		uci commit netmode
		/etc/init.d/netmode reload
	;;
esac

local apcliband="a"
case $curmode in
	*_2g_*) apcliband="b";;
esac

i=1

local dummy band ssid key encryption device iface_num

while json_get_var dummy $i; do
	json_select $i
	json_get_var band band
	[ "$apcliband" == "$band" ] && break
	json_select ..
	i=$((i+1))
done

[ "$apcliband" == "$band" ] || exit

repeater_iface_num=$(uci -q show wireless | grep -e ".mode='wet'" -e ".mode='sta'"  | sed 's/.*\[\([0-9]\)\].*/\1/')
[ -z "$repeater_iface_num" ] && exit
json_get_var ssid ssid
json_get_var key key
json_get_var encryption encryption

set_wireless_values "$repeater_iface_num" "$ssid" "$key" "$encryption"

json_load "`cat $file`"
json_select "wifi_ifaces"

config_load wireless
local b_num=0
local a_num=0

i=1
while json_get_var dummy $i; do
	json_select $i
	json_get_var band band
	get_device "$band" device
	case $band in
		a)
			get_iface_num "$device" "$a_num" iface_num
			a_num=$((a_num+1))
			;;
		b)
			get_iface_num "$device" "$b_num" iface_num
			b_num=$((b_num+1))
			;;
	esac
	[ -z $iface_num ] && return
	json_get_var ssid ssid
	json_get_var encryption encryption
	json_get_var key key
	set_wireless_values "$iface_num" "$ssid" "$key" "$encryption"
	json_select ..
	i=$((i+1))
done

while uci -q get wireless.@wifi-iface[$i] >/dev/null; do
	state="reload"
	uci -q delete wireless.@wifi-iface[$i] >/dev/null
	i=$((i+1))
done

uci commit wireless

if [ "$state" == "exit" ]; then
	return
elif [ "$state" == "apply" ]; then
	# wifi apply
	wifi reload
else
	# wifi reload
	wifi reload
fi
