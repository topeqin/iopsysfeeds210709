#!/bin/sh

[ "$INTERFACE" != "wan" ] && exit

. /lib/functions/network.sh

network_get_ipaddr ip $INTERFACE
repeaterready="$(uci -q get netmode.setup.repeaterready)"

[ -z "$ip" ] && exit

toggle_firewall() {
	local section=$1
	local disable=$2
	config_get name "$1" name
	if [ "$name" == "wan" ]; then
		uci -q set firewall.settings.disabled=$disable
		if [ "$disable" == "1" ]; then
			uci -q set firewall.$section.input="ACCEPT"
		else
			uci -q set firewall.$section.input="REJECT"
		fi
		uci -q commit firewall
	fi
}

set_disabled() {
	config_load firewall
	config_foreach toggle_firewall zone $1
}

is_inteno_macaddr()
{
	macaddr=$1

	echo $macaddr | grep -i -e "^00:22:07" \
				-e "^44:D4:37" \
				-e "^00:0C:07" \
				-e "^02:0C:07" \
				-e "^06:0C:07" \
				-e "^00:0C:43" \
				-e "^02:0C:43" \
				-e "^06:0C:43" \
	&& return
	false
}

switch_mode() {
	[ "$repeaterready" == "1" ] || return

	defroute=$(ip r | grep default | awk '{print$3}')
	ping -c 1 -W 1 $defroute >/dev/null 2>&1
	uplinkmac=$(grep "$defroute" /proc/net/arp | awk '{print$4}')

	# will be auto-configured if the uplink device is Inteno
	is_inteno_macaddr $uplinkmac && return

	ubus call leds set  '{"state" : "allflash"}'
	echo "Switching to 'extender' mode" > /dev/console
	uci -q set netmode.setup.curmode='repeater'
	uci set netmode.setup.repeaterready=0
	uci commit netmode
	/etc/init.d/netmode reload
	echo "Restarting network services" > /dev/console
	ubus call network reload
	wifi reload nodat
	ubus call router.network reload
	ubus call leds set  '{"state" : "normal"}'
}

test_ip() {
	if [ -n "$(echo $ip | grep -E '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)')" ]; then
		# private IP
		switch_mode
		set_disabled 1
	else
		# public IP
		set_disabled 0
		[ "$1" -eq "1" ] && {
			uci set netmode.setup.repeaterready=0
			uci commit netmode
			local pid="$(ps | grep wificontro[l] | awk '/repeater/ {print $1}')"
			[ "$pid" != "" ] && kill -9 $pid
			pid="$(pidof netmode-client-detect)"
			[ "$pid" == "" ] && /sbin/netmode-client-detect &
		}
	fi
}

case "$(uci -q get netmode.setup.curmode)" in
		repeater*) test_ip ;;
		*) [ "$repeaterready" == "1" ] && test_ip 1;;
esac

