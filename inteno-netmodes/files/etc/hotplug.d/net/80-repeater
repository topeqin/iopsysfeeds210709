#!/bin/sh

. /lib/functions.sh
include /lib/network

[ "$INTERFACE" != "$(uci get layer2_interface_ethernet.Wan.ifname)" ] && exit

case "$(uci get netmode.setup.curmode)" in
		repeater|repeater_dualdown) echo "Preparing to switch mode" ;;
		*) exit ;;
esac

get_wifi_wet_interface() {
#	handle_interface() {
#		config_get mode "$1" mode
#		if [ "$mode" == "wet" ] ; then
#			config_get ifname "$1" ifname
#			echo "$ifname"
#		fi
#	}
#	config_load wireless
#	config_foreach handle_interface wifi-iface "$device"
	echo "wl1"
}

get_wifi_iface_cfgstr() {
	get_cfgno() {
		config_get ifname "$1" ifname
		[ "$ifname" == "$2" ] && echo "wireless.$1"
	}
	config_load wireless
	config_foreach get_cfgno wifi-iface $1 $2
}

case "$ACTION" in
	add|register)
		echo "Autoswitch to Extender mode" > /dev/console
		sleep 2
		# remove wifi client interface
		case "$(uci get netmode.setup.curmode)" in
			repeater_dualdown)
				uci -q set $(get_wifi_iface_cfgstr $(get_wifi_wet_interface)).disabled=1
			;;
			repeater)
				uci -q set $(get_wifi_iface_cfgstr $(get_wifi_wet_interface)).mode=ap
			;;
		esac
		uci commit wireless
		#add wan ethernet port
		uci set network.wan.ifname="$(echo $(uci get layer2_interface_ethernet.Wan.ifname) $(uci get network.wan.ifname) | tr ' ' '\n' | sort -u | tr '\n' ' ')"
		ubus call uci commit '{"config":"network"}'
	;;
	remove|unregister)
		echo "Autoswitch to Repeater mode" > /dev/console
		sleep 2
		# add wifi client interface
		case "$(uci get netmode.setup.curmode)" in
			repeater_dualdown)
				uci -q set $(get_wifi_iface_cfgstr $(get_wifi_wet_interface)).disabled=0
			;;
			repeater)
				uci -q set $(get_wifi_iface_cfgstr $(get_wifi_wet_interface)).mode=wet
			;;
		esac
		uci commit wireless
		#remove wan ethernet port
		uci set network.wan.ifname="$(uci get network.wan.ifname | sed 's/$/ /' | sed -r "s/`uci get layer2_interface_ethernet.Wan.ifname` //g")"
		ubus call uci commit '{"config":"network"}'
	;;
esac
