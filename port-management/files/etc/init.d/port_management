#!/bin/sh /etc/rc.common

START=15
USE_PROCD=1

. /lib/functions.sh
include /lib/network

populate_config(){
	if [ -s "/etc/config/ports" ]
	then
		if uci -q get ports.@ethport[0] >/dev/null # return if there is any valid content
		then
			return 0
		else
			rm -f /etc/config/ports
		fi
	fi
	touch /etc/config/ports

	local portorder="$(db get hw.board.ethernetPortOrder)"
	for port in $portorder
	do
		uci add ports ethport
		uci rename ports.@ethport[-1]="$(interfacename $port)"
		uci set ports.@ethport[-1].enable=1
		uci set ports.@ethport[-1].name="$(interfacename $port)"
		uci set ports.@ethport[-1].ifname="$port"
		uci set ports.@ethport[-1].speed=1000
		uci set ports.@ethport[-1].duplex="full"
		uci set ports.@ethport[-1].autoneg=1
		uci set ports.@ethport[-1].eee=0
		if [ "$(db -q get hw.board.ethernetWanPort)" = "$port" ]
		then
			uci set ports.@ethport[-1].pause=1
			uci set ports.@ethport[-1].uplink=1
		else
			uci set ports.@ethport[-1].pause=0
		fi
	done

	local fiberorder="$(db get hw.board.fiberPortOrder)"
	for fiber in $fiberorder; do
		uci add ports sfpport
		uci rename ports.@sfpport[-1]="$(fibername $fiber)"
		uci set ports.@sfpport[-1].enable=1
		uci set ports.@sfpport[-1].name="$(fibername $fiber)"
		uci set ports.@sfpport[-1].ifname="$fiber"
		uci set ports.@sfpport[-1].speed=1000
		uci set ports.@sfpport[-1].duplex="full"
		uci set ports.@sfpport[-1].autoneg=1
		uci set ports.@sfpport[-1].eee=0
	done

	uci commit ports

	[ $DEBUG ] && cat /etc/config/ports
}

configure_ethports(){
	local cfg=$1
	local fiber=$2
	local ifname enabled speed duplex autoneg eee pause

	config_get ifname $cfg ifname
	[ -d /sys/class/net/$ifname ] || return

	config_get enabled $cfg enabled 1
	config_get speed $cfg speed 1000
	config_get duplex $cfg duplex "auto"
	config_get autoneg $cfg autoneg 1
	config_get eee $cfg eee 0
	config_get pause $cfg pause 0

	set_port_settings $ifname $enabled $speed $duplex $autoneg $eee $pause
}

start_service() {
	[ -f /sbin/db -a -f /lib/db/config/hw ] && populate_config

	[ -f /lib/network/port.sh ] || return

	config_load ports
	config_foreach configure_ethports ethport
}

service_triggers() {
	procd_add_reload_trigger ports
}
